// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3504.SampleChassisBot.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc3504.SampleChassisBot.Robot;

/**
 * This is tank drive, this uses one joystick (logitech dual controller)
 */
public class DriveByTank extends Command {
	
    public DriveByTank() {
    	requires(Robot.chassis);
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {

    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
    	//This uses the logitech controller
    	//left joystick
    	double left_mag = Robot.oi.getTankDrive().getY();
    	//This is for the right stick of the joystick - check values before driving.
    	//weird bug where the default values for the joystick was .5 for y and z rotate
    	//This was for the dual controller
    	//need to check for acceleration/speed when limiting.
    	double right_mag = Robot.oi.getTankDrive().getThrottle();
    	
    	System.out.println("Left: " + left_mag);
    	System.out.println("Right: " + right_mag);
        
    	Robot.chassis.driveByTank(left_mag, right_mag);
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    	Robot.chassis.stop();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    	end();
    }
    
}
